Description:
    >   This program is enabling a telegram bot named passwordCrackingBot (https://t.me/PasWordCraCkingBot)
        to find the passwords of files you send to it.Is is also able to unhash the MD5 decryption of 200 English words.
        Moreover, it is able to detect if the files are locked with a password or nt, and if the files are MD5 decrypted or not.
    >   You can stop searching for passwords by typing "stop" to the bot

Limitations:
    >   Can only unhash .txt files
    >   can only crack open the password of PDF,ZIP files (7zip also, but is buggy).
    >   passwords must be using numbers and LOWERCASE characters only and len <= 8

Architecture:
    I took a functional approach for creating the bot.
    There are 3 files:
    >   app.py - the main file. the file is in charge of generating passwords and decrypting files.
    >   telegram_communication.py - all the functions that are related to the communication with the bot.
    >   rainbow_table.py - a dummy file representing the rainbowtable i have stored on my local machine databasem used for
        testing only.
Setup:
    >   Making sure my personal computer is ON (for db communication).
    >   The application utilizes threading. It receives 1 command line argument - which is the number of threads the user wishes to use.
    >   Once the app is given valid command line argument and is executed - You should be able to communicate with the bot !

Future Maintenance:
    >   To expand the project to support more file types all you need to do is to add the file type to "decode_file" function in app.py
        and then write the file decryption function to use in "decode_file".

Issues:
    >   The ThreadPool i created sometimes doesnt find the password. from what i see, it sometimes doesnt assign a password as a task properly
        but i couldn't tell where exactly in the code that happens. if you try again the same password it might work. If you change the thread number it might work.
        .Moreover i only used the threadpool with PDF files and did not expand the behaviour to other file types,
         since i first designed the solution differently and changed it later, then ran out of time for the project.
        I have added (commented out) password_decrypter2 - which is a chatGPT written function that solves this problem but works much slower.
        I did not write that code and so i am not using it in my final solution.
    >   Do not attempt to use 7zip files as for some unknown reason it isn't functioning correctly sometimes.

Notes:
    > This was a fun program to work on - and also exhausting !
    > The first password that is checked with x letters is "a"*x

